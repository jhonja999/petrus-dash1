// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// Roles disponibles en el sistema
enum Role {
  Conductor    // Usuario que maneja los camiones
  ADMIN        // Administrador del sistema
}

/// Estados posibles para usuarios
enum UserState {
  Activo
  Inactivo
  Suspendido
  Eliminado
  Asignado
}

/// Estados posibles para camiones
enum TruckState {
  Activo
  Inactivo
  Mantenimiento
  Transito
  Descarga
  Asignado
}

/// Tipos de combustible
enum FuelType {
  DIESEL_B5
  GASOLINA_90
  GASOLINA_95
  GLP
  ELECTRICA
}

/// Modelo de Usuario
model User {
  id         Int           @id @default(autoincrement())
  dni        String        @unique
  name       String
  lastname   String
  email      String        @unique
  password   String        @default("peru2025++")
  clerkId    String?       @unique
  role       Role          @default(Conductor)
  state      UserState     @default(Activo)
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
  Assignment Assignment[]

  @@index([role, state])
  @@index([clerkId])
}

/// Modelo de Camión
model Truck {
  id          Int           @id @default(autoincrement())
  placa       String        @unique
  typefuel    FuelType
  capacitygal Decimal       @db.Decimal(10, 2)
  state       TruckState    @default(Activo)
  Assignment  Assignment[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  @@index([state])
}

/// Modelo de Cliente
model Customer {
  id           Int         @id @default(autoincrement())
  companyname  String      @unique
  ruc          String      @unique
  address      String
  contactName  String?
  contactPhone String?
  contactEmail String?
  Discharge    Discharge[]
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
}

/// Modelo de Asignación
model Assignment {
  id             Int           @id @default(autoincrement())
  truckId        Int
  driverId       Int
  totalLoaded    Decimal       @db.Decimal(10, 2)
  totalRemaining Decimal       @db.Decimal(10, 2)
  fuelType       FuelType
  notes          String?
  isCompleted    Boolean       @default(false)
  date           DateTime      @default(now())

  truck      Truck       @relation(fields: [truckId], references: [id])
  driver     User        @relation(fields: [driverId], references: [id])
  discharges Discharge[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([truckId])
  @@index([driverId])
  @@index([isCompleted])
}

/// Modelo de Descarga
model Discharge {
  id              Int           @id @default(autoincrement())
  assignmentId    Int
  customerId      Int
  totalDischarged Decimal       @db.Decimal(10, 2)
  startMarker     Decimal       @db.Decimal(10, 2)
  endMarker       Decimal       @db.Decimal(10, 2)
  notes           String?

  assignment Assignment @relation(fields: [assignmentId], references: [id])
  customer   Customer   @relation(fields: [customerId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([assignmentId])
  @@index([customerId])
  @@index([assignmentId, customerId])
}
